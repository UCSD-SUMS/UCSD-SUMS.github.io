%!PS-Adobe-2.0
%%Title: TeX output 1998.05.28:1416
%%Creator: DVILASER/PS, ArborText, Inc.
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%DocumentMedia: Plain 509 660 75 white {}
%%EndComments

%! 
%  Dvips.pro - included prolog for DviLaser-generated PostScript files.
% 
%  Copyright (c) 1986-91, ArborText, Inc.
%  Permission to copy is granted so long as the PostScript code
%  is not resold or used in a commercial product.
%
%  $Header: /ati/src/tex/dvips/src/RCS/dvips.pro.dist,v 1.3 1992/04/29 20:00:53 mmb Exp $
%
systemdict /setpacking known  % use array packing mode if its available
  {/savepackingmode currentpacking def 
   true setpacking}
  if
 
/$DviLaser 400 dict def
 
% Begin document
/BeginDviLaserDoc {
  0 0 moveto
  vmstatus pop pop 0 eq 
    { $DviLaser begin 
      InitializeState }
    { /DviLaserJob save def
      $DviLaser begin
      InitializeState
      /DviLaserFonts save def }
    ifelse
} bind def
 
% End document
/EndDviLaserDoc {
  vmstatus pop pop 0 eq 
    { end }
    { DviLaserFonts restore
      end
      DviLaserJob restore }
    ifelse
} bind def
 
$DviLaser begin

/tempstr 64 string def
/tempint 0 def
/tempmatrix matrix def
 
%
%  Debugging routines
%
/DebugMode false def

/PrintInt {
  tempstr cvs print
} bind def

/PrintLn {
  (\n) print flush
} bind def
 
/PrintVMStats {
  print
  PrintLn
  (VM status - ) print
  vmstatus
  3 copy
  PrintInt (\(total\), ) print
  PrintInt (\(used\), ) print
  pop
  exch sub 
  PrintInt (\(remaining\), ) print
  PrintInt (\(level\)) print
  PrintLn
} bind def
 
/VMS /PrintVMStats load def 
 
/VMSDebug {
  DebugMode
    {PrintVMStats}
    {pop}
    ifelse
} bind def
 
(beginning of common prolog) VMSDebug 

% Make it easy to bind definitions.
/bdef { bind def } bind def
/xdef { exch def } bdef

% Bind some procedures that do restores and such to avoid InvalRestore problems.
/RestoreDviLaserPage {
  /DviLaserPage where {pop DviLaserPage restore} if
} bdef

/RestoreDviLaserFonts {
  DocumentType 0 eq 
    {/DviLaserFonts where 
      {pop DviLaserFonts restore} 
      if
    }
    if
} bdef

/SaveDviLaserFonts {
  DocumentType 0 eq 
   {/DviLaserFonts save def}
   if
} bdef

/SetCurrentPoint {
  /currentpoint cvx stopped {0 0 moveto currentpoint} if
} bdef

% Begin page
/BP {
  /Magnification xdef
  /DviLaserPage save def
  (beginning of page) VMSDebug 
} bdef
 
% End page
/EP {
  DviLaserPage restore
} bdef
 
% Exit page (temporarily) to add fonts/characters.
/XP {
  % Save current point information so it can be reset later. 
  /Xpos where {pop Xpos} {0} ifelse
  /Ypos where {pop Ypos} {0} ifelse
  SetCurrentPoint
  RestoreDviLaserPage
  moveto
  /Ypos xdef
  /Xpos xdef
} bdef
 
% Resume page
/RP {
  /DviLaserPage save def
} bdef
 
% Purge all fonts to reclaim memory space. 
/PF {
  GlobalMode
  LocalMode
} bdef
 
% Switch to base save/restore level, saving state information. 
/GlobalMode {
  /UserSave where {pop UserSave} if  % invoke "UserSave" if available
  PortraitMode 
  PaperWidth 
  PaperHeight 
  PxlResolution 
  Resolution 
  Magnification
  Ymax
  RasterScaleFactor
  SetCurrentPoint
  RestoreDviLaserPage
  RestoreDviLaserFonts
  RecoverState
} bdef
 
% Preserve state at the base level.
/RecoverState {
  10 copy
  /Ypos xdef
  /Xpos xdef
  /RasterScaleFactor xdef
  /Ymax xdef
  /Magnification xdef
  /Resolution xdef
  /PxlResolution xdef
  /PaperHeight xdef
  /PaperWidth xdef
  /PortraitMode xdef
  DoInitialScaling
  PortraitMode not {PaperWidth 0 SetupLandscape} if
  Xpos Ypos moveto
} bdef

% Initialize state variables to default values.
/InitializeState {
  /DocumentType 0 def
  /Resolution 3600.0 def
  /PxlResolution 300.0 def
  /RasterScaleFactor PxlResolution Resolution div def
  /PortraitMode true def
  11.0 Resolution mul /PaperHeight xdef
  8.5 Resolution mul /PaperWidth xdef
  /Ymax PaperHeight def
  /Magnification 1000.0 def
  /Xpos 0.0 def
  /Ypos 0.0 def
  /InitialMatrix matrix currentmatrix def
} bdef

% Switch from base save/restore level, restoring state information. 
/LocalMode {
  /Ypos xdef
  /Xpos xdef
  /RasterScaleFactor xdef
  /Ymax xdef
  /Magnification xdef
  /Resolution xdef
  /PxlResolution xdef
  /PaperHeight xdef
  /PaperWidth xdef
  /PortraitMode xdef
  DoInitialScaling
  PortraitMode not {PaperWidth 0 SetupLandscape} if
  Xpos Ypos moveto
  /UserRestore where {pop UserRestore} if  % invoke "UserRestore" if available
  SaveDviLaserFonts 
  /DviLaserPage save def
} bdef
 
% Abbreviations 
/S /show load def
/SV /save load def
/RST /restore load def
 
/Yadjust {Ymax exch sub} bdef
 
% (x,y) position absolute, just set Xpos & Ypos, don't move.
/SXY {
  Yadjust 
  /Ypos xdef /Xpos xdef
} bdef
 
% (x,y) position absolute
/XY {
  Yadjust 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (x,0) position absolute
/X {
  currentpoint exch pop 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (0,y) position absolute
/Y {
  currentpoint pop exch Yadjust 
  2 copy /Ypos xdef /Xpos xdef
  moveto
} bdef
 
% (x,y) position relative
/xy {
  neg rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef
 
% (x,0) position relative
/x {
  0.0 rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef
 
% (0,y) position relative
/y {
  0.0 exch neg rmoveto
  currentpoint /Ypos xdef /Xpos xdef
  } bdef
 
%
% Print a rule.  Normally this is done with a filled area defined by rlineto.
% Unfortunately, doing it this way introduces a 1 pixel error on some
% PostScript printer implementations.  In order to get exactly correct
% pixel size and positioning, an alternate approach is implemented under
% control of boolean "PreciseRulePositioning".  With this approach,
% we create a temporary font in which the rule is the only character.
% Since the alternate mechanism causes documents with lots of rules to
% print much more slowly, and since the 1 pixel maximum difference is
% rarely noticed, it is not used by default.  Enable it by setting
% "PreciseRulePositioning" true.
%
/PreciseRulePositioning false def

/R {
  /ht xdef
  /wd xdef
  PreciseRulePositioning ht 1950 le wd 1950 le and PxlResolution 400 le and and
    {save
    /tfd 6 dict def
    tfd begin
      /FontType 3 def
      /FontMatrix [1 0 0 1 0 0] def
      /FontBBox [0 0 wd ht] def
      /Encoding 256 array dup 97 /a put def
      /BuildChar {
        pop   % ignore character code
        pop   % ignore font dict, too
        wd 0 0 0 wd ht setcachedevice
        wd ht true
        [1 0 0 -1 0 ht] {<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>} imagemask
        } def
      end % tfd
    /tf tfd definefont setfont
    (a) show
    restore
    }
    {gsave
    0 setgray
    currentpoint
    newpath
      moveto
      0.0 ht rlineto
      wd 0.0 rlineto
      0.0 ht neg rlineto
      wd neg 0.0 rlineto
    closepath fill
    grestore
    }
  ifelse
  wd 0.0 rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef

/SHADE {
  /percent xdef
  /ht xdef
  /wd xdef
  /Red xdef
  /Green xdef
  /Blue xdef
  gsave
  0.01 percent mul setgray
  currentpoint
  newpath
    moveto
    0.0 ht rlineto
    wd 0.0 rlineto
    0.0 ht neg rlineto
    wd neg 0.0 rlineto
  closepath fill
  grestore
  wd 0.0 rmoveto
  currentpoint /Ypos xdef /Xpos xdef
} bdef

%
%  <PXL-file resolution(pix/inch)> <resolution(pix/inch)> RES
%
/RES {
  /Resolution xdef
  /PxlResolution xdef
  /RasterScaleFactor PxlResolution Resolution div def
  DoInitialScaling
} bdef

% Document type: 0-document; 1-page; 2-EPS
/DT {
  /DocumentType xdef
} bdef

%
% Do initial scaling.
%
/DoInitialScaling {
  InitialMatrix setmatrix
  72.0 Resolution div dup scale   
} bdef
 
%
%  <paper-height(pix)> <paper-width(pix)> PM 
%
/PM { 
  XP
  /PaperWidth xdef 
  /PaperHeight xdef
  /Ymax PaperHeight def
  /PortraitMode true def
  DoInitialScaling
  RP
} bdef  
 
%
%  <paper-height(pix)> <paper-width(pix)> LM 
%
/LM {
  XP
  /PaperWidth xdef 
  /PaperHeight xdef
  /Ymax PaperWidth def
  /PortraitMode false def
  DoInitialScaling
  PaperWidth 0 SetupLandscape
  RP
} bdef  
  
% Change magnification setting
/MAG {
  XP
  /Magnification xdef
  RP
} bdef
 
%
%  Switch to landscape mode
%
/SetupLandscape {
  translate
  90.0 rotate
} bdef
 
%
%  <mode> SPB - begin "\special" mode
%
%  This is the PostScript procedure used to transfer from the internal
%  environment used for the DVI translation code emitted by DVIPS to
%  a standard PostScript environment.
%
%  Parameters: 0 - Local
%              1 - Global
%              2 - Inline
%
/SPB {
  /spc_mode xdef
  spc_mode 0 eq spc_mode 2 eq or
    {XP}
    {spc_mode 1 eq {GlobalMode} if} 
    ifelse
  Resolution 72.0 div dup scale        % Restore default scaling...
  Magnification 1000.0 div dup scale   % Adjust for any magnification...
  /Xpos Xpos 72.0 Resolution div mul 1000.0 Magnification div mul def
  /Ypos Ypos 72.0 Resolution div mul 1000.0 Magnification div mul def
} bdef
 
%
%  <mode> SPE - end "\special" mode
%
%  This is the PostScript procedure used to reenter the internal
%  environment used for the DVI translation code emitted by DVIPS from 
%  the standard PostScript environment provided for processing user-supplied
%  PostScript code.
%
%  Parameters: 0 - Local
%              1 - Global
%              2 - Inline
%
/SPE {
  /spc_mode xdef
  1000.0 Magnification div dup scale   % Un-adjust for any magnification...
  72.0 Resolution div dup scale        % Restore default internal scaling...
  spc_mode 0 eq spc_mode 2 eq or
    {RP}
    {spc_mode 1 eq {LocalMode} if} 
    ifelse
} bdef
 
%
%  <num-copies> PP
%
/PP {
  /#copies xdef
  showpage
  /#copies 1 def
} bdef
 
%
%  /font-name <point-size(pix)> DMF
%
/DMF {
  /psz xdef
  /nam xdef
  nam findfont psz scalefont setfont
} bdef
 
%
%  /abcd (xxx) str-concat  ==> /abcdxxx
%
/str-concatstr 64 string def

/str-concat {
  /xxx xdef
  /nam xdef
  /namstr nam str-concatstr cvs def
  /newnam namstr length xxx length add string def
  newnam 0 namstr putinterval
  newnam namstr length xxx putinterval
  newnam cvn 
} bdef
 
%
%  /abcdef 2 str-strip ==> /cdef
%
/str-strip {
  /num xdef
  /nam xdef
  /namstr nam tempstr cvs def
  /newlen namstr length num sub def
  namstr num newlen getinterval
  cvn
} bdef
 
%
%  <old-dict> copydict ==> new-dict on stack
%
/copydict {
  dup length 1 add dict /newdict xdef
    {1 index /FID ne
      {newdict 3 1 roll put}
      {pop pop}
     ifelse
    } forall 
  newdict
} bdef
 
%
%  <font-type> DefineCMEncoding
%
/DefineCMEncoding {
  /EncodeType xdef
 
  /CMEncoding 256 array def
  /Times-Roman findfont /Encoding get aload pop CMEncoding astore pop
 
  EncodeType 11 eq {Do-CM-rm-encoding} if
  EncodeType 12 eq {Do-CM-it-encoding} if
  EncodeType 13 eq {Do-CM-tt-encoding} if
} bdef
 
%
%  Do special mappings for the various CM-font types.  Characters that
%  get "covered up" are repositioned in the range (128,128+32).  The 
%  range (256-64,255) is filled with the standard ISO Latin/1 mappings.
%
/Do-standard-CM-encodings {
  CMEncoding
  dup 0 /.notdef put
  dup 1 /.notdef put
  dup 2 /.notdef put
  dup 3 /.notdef put
  dup 4 /.notdef put
  dup 5 /.notdef put
  dup 6 /.notdef put
  dup 7 /.notdef put
 
  dup 8 /.notdef put
  dup 9 /.notdef put
  dup 10 /.notdef put
  dup 11 /.notdef put
  dup 12 /fi put
  dup 13 /fl put
  dup 14 /.notdef put
  dup 15 /.notdef put
 
  dup 16 /dotlessi put
  dup 17 /ogonek put
  dup 18 /grave put
  dup 19 /acute put
  dup 20 /caron put
  dup 21 /breve put
  dup 22 /macron put
  dup 23 /ring put
 
  dup 24 /cedilla put
  dup 25 /germandbls put
  dup 26 /ae put
  dup 27 /oe put
  dup 28 /oslash put
  dup 29 /AE put
  dup 30 /OE put
  dup 31 /Oslash put

  dup 127 /dieresis put

  dup 128 /space put
  dup 129 /quotedbl put
  dup 130 /sterling put
  dup 131 /dollar put
  dup 132 /less put
  dup 133 /greater put
  dup 134 /backslash put
  dup 135 /asciicircum put

  dup 136 /underscore put
  dup 137 /braceleft put
  dup 138 /bar put
  dup 139 /braceright put
  dup 140 /asciitilde put

  dup 141 /brokenbar put
  dup 142 /copyright put
  dup 143 /logicalnot put
  dup 144 /registered put
  dup 145 /plusminus put
  dup 146 /twosuperior put
  dup 147 /threesuperior put
  dup 148 /mu put
  dup 149 /onesuperior put
  dup 150 /onequarter put
  dup 151 /onehalf put
  dup 152 /threequarters put
  dup 153 /Eth put
  dup 154 /multiply put
  dup 155 /Thorn put
  dup 156 /eth put
  dup 157 /divide put
  dup 158 /thorn put
  dup 159 /ordfeminine put
  dup 160 /ordmasculine put
  dup 176 /Lslash put
  dup 181 /lslash put
  pop
  Do-ISO-Latin1-Encoding 
} bdef

% Fill the last 64 positions with ISOLatin1 composite character definitions.
/Do-ISO-Latin1-Encoding {
  CMEncoding
  dup 192 /Agrave put
  dup 193 /Aacute put
  dup 194 /Acircumflex put
  dup 195 /Atilde put
  dup 196 /Adieresis put
  dup 197 /Aring put
  dup 198 /AE put
  dup 199 /Ccedilla put

  dup 200 /Egrave put
  dup 201 /Eacute put
  dup 202 /Ecircumflex put
  dup 203 /Edieresis put
  dup 204 /Igrave put
  dup 205 /Iacute put
  dup 206 /Icircumflex put
  dup 207 /Idieresis put

  dup 208 /Eth put
  dup 209 /Ntilde put
  dup 210 /Ograve put
  dup 211 /Oacute put
  dup 212 /Ocircumflex put
  dup 213 /Otilde put
  dup 214 /Odieresis put
  dup 215 /multiply put

  dup 216 /Oslash put
  dup 217 /Ugrave put
  dup 218 /Uacute put
  dup 219 /Ucircumflex put
  dup 220 /Udieresis put
  dup 221 /Yacute put
  dup 222 /Thorn put
  dup 223 /germandbls put

  dup 224 /agrave put
  dup 225 /aacute put
  dup 226 /acircumflex put
  dup 227 /atilde put
  dup 228 /adieresis put
  dup 229 /aring put
  dup 230 /ae put
  dup 231 /ccedilla put

  dup 232 /egrave put
  dup 233 /eacute put
  dup 234 /ecircumflex put
  dup 235 /edieresis put
  dup 236 /igrave put
  dup 237 /iacute put
  dup 238 /icircumflex put
  dup 239 /idieresis put

  dup 240 /eth put
  dup 241 /ntilde put
  dup 242 /ograve put
  dup 243 /oacute put
  dup 244 /ocircumflex put
  dup 245 /otilde put
  dup 246 /odieresis put
  dup 247 /divide put

  dup 248 /oslash put
  dup 249 /ugrave put
  dup 250 /uacute put
  dup 251 /ucircumflex put
  dup 252 /udieresis put
  dup 253 /yacute put
  dup 254 /thorn put
  dup 255 /ydieresis put
  pop
} bdef
 
/Do-CM-rm-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 32 /.notdef put
  dup 34 /quotedblright put
  dup 60 /exclamdown put
  dup 62 /questiondown put
  dup 92 /quotedblleft put
  dup 94 /circumflex put
  dup 95 /dotaccent put
  dup 123 /endash put
  dup 124 /emdash put
  dup 125 /hungarumlaut put
  dup 126 /tilde put
  pop
} bdef
 
/Do-CM-it-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 32 /.notdef put
  dup 34 /quotedblright put
  dup 36 /sterling put
  dup 60 /exclamdown put
  dup 62 /questiondown put
  dup 92 /quotedblleft put
  dup 94 /circumflex put
  dup 95 /dotaccent put
  dup 123 /endash put
  dup 124 /emdash put
  dup 125 /hungarumlaut put
  dup 126 /tilde put
  pop
} bdef
 
/Do-CM-tt-encoding {
  Do-standard-CM-encodings
  CMEncoding
  dup 12 /.notdef put
  dup 13 /quotesingle put
  dup 14 /exclamdown put
  dup 15 /questiondown put
  dup 94 /circumflex put
  dup 126 /tilde put
  pop
} bdef

%
% Routines to handle packing/unpacking numbers.
%
%  <target> <pos> <num> PackHW --> <new target>
%
/PackHW {
  /num xdef
  /pos xdef
  /target xdef
  num 16#0000FFFF and 1 pos sub 16 mul bitshift
    target or
} bdef

%
%  <target> <pos> <num> PackByte --> <new target>
%
/PackByte {
  /num xdef
  /pos xdef
  /target xdef
  num 16#000000FF and 3 pos sub 8 mul bitshift
    target or
} bdef

%
%  <pos> <num> UnpkHW --> <unpacked value>
%
/UnpkHW {
  /num xdef
  /pos xdef
  num 1 pos sub -16 mul bitshift 16#0000FFFF and
  dup 16#00007FFF gt {16#00010000 sub} if
} bdef

%
%  <pos> <num> UnpkByte --> <unpacked value>
%
/UnpkByte {
  /num xdef
  /pos xdef
  num 3 pos sub -8 mul bitshift 16#000000FF and
  dup 16#0000007F gt {16#00000100 sub} if
} bdef

%
%  <int-font-name> <ext-font-name> <pt-sz(pix)> <type> <loaded-fg> DefineCMFont
%
%    type 10: "as-is" PostScript font
%    type 11: CM-mapped PostScript font - roman
%    type 12: CM-mapped PostScript font - text italic 
%    type 13: CM-mapped PostScript font - typewriter type 
%
/int-dict-name {int (-dict) str-concat} bdef
/int-dict {int (-dict) str-concat cvx load} bdef

/DF {
  true  % signal that the font is already loaded
  DefineCMFont
} bdef
 
/DNF {
  false  % signal that the font is not already loaded
  DefineCMFont
} bdef

/DefineCMFont {
  /loaded xdef
  /typ xdef
  /psz xdef
  /ext xdef
  /int xdef
 
  typ 10 ne 
    { % font_type = 11, 12, 13
    loaded not
      { /fnam ext 3 str-strip def
        fnam findfont copydict /newdict xdef 
        typ DefineCMEncoding
        newdict /Encoding CMEncoding put
        ext newdict definefont pop
      } if
    int-dict-name ext findfont psz scalefont def
    currentdict int [int-dict /setfont cvx] cvx put
    }
    { % font_type = 10
    /fnam ext def
    int-dict-name fnam findfont psz scalefont def
    currentdict int [int-dict /setfont cvx] cvx put
    }
  ifelse
} bdef 
 
%
%  <int-font-name> <ext-font-name> <pt-sz(pix)> <PXL mag> <num-chars>
%      [llx lly urx ury] <newfont-fg> DefinePXLFont
%

/PXLF {
  true  % signal that the font is already loaded
  DefinePXLFont
} bdef
 
/PXLNF {
  false  % signal that the font is not already loaded
  DefinePXLFont
} bdef

/PXLBuildCharDict 17 dict def
 
/CMEncodingArray 256 array def
0 1 255 {CMEncodingArray exch dup tempstr cvs cvn put} for

/RasterConvert {RasterScaleFactor div} bdef
 
/TransformBBox {
  aload pop
 
  /BB-ury xdef
  /BB-urx xdef
  /BB-lly xdef
  /BB-llx xdef
 
  [BB-llx RasterConvert BB-lly RasterConvert 
   BB-urx RasterConvert BB-ury RasterConvert]
} bdef

/DefinePXLFont {
  /newfont xdef
  /bb xdef
  /num xdef
  /psz xdef
  /dsz xdef
  /pxlmag xdef
  /ext xdef
  /int xdef
 
  /fnam ext (-) str-concat pxlmag tempstr cvs str-concat def
 
  newfont not {
    int-dict-name 13 dict def
   
    int-dict begin
      /FontType 3 def
      /FontMatrix [1 dsz div 0 0 1 dsz div 0 0] def
      /FontBBox bb TransformBBox def
      /Encoding CMEncodingArray def
      /CharDict 1 dict def
      CharDict begin
        /Char-Info num array def
        end
  
      /BuildChar
        { 
          PXLBuildCharDict begin
            /char xdef
            /fontdict xdef
   
            fontdict /CharDict get /Char-Info get char get aload pop
   
            /rasters xdef
            /PackedWord1 xdef
   
            0 PackedWord1 UnpkHW 16#7FFF ne
              { /PackedWord2 xdef
                /wx 0 PackedWord1 UnpkHW def
                /rows 2 PackedWord1 UnpkByte def
                /cols 3 PackedWord1 UnpkByte def
                /llx 0 PackedWord2 UnpkByte def
                /lly 1 PackedWord2 UnpkByte def
                /urx 2 PackedWord2 UnpkByte def
                /ury 3 PackedWord2 UnpkByte def }
              { /PackedWord2 xdef
                /PackedWord3 xdef
                /PackedWord4 xdef
                /wx 1 PackedWord1 UnpkHW def
                /rows 0 PackedWord2 UnpkHW def
                /cols 1 PackedWord2 UnpkHW def
                /llx 0 PackedWord3 UnpkHW def
                /lly 1 PackedWord3 UnpkHW def
                /urx 0 PackedWord4 UnpkHW def
                /ury 1 PackedWord4 UnpkHW def }
               ifelse

            rows 0 lt
              { /rows rows neg def
                /runlength 1 def }
              { /runlength 0 def }
             ifelse
 
            wx 0 
            llx RasterConvert lly RasterConvert 
            urx RasterConvert ury RasterConvert setcachedevice
            rows 0 ne
              {
              gsave
                cols rows true 
		RasterScaleFactor 0 0 RasterScaleFactor neg llx neg .5 add ury .5 add

                  tempmatrix astore
                {GenerateRasters} imagemask
              grestore
              } if
            end
        } def
      end
   
      fnam int-dict definefont pop 
    } if 
 
  int-dict-name fnam findfont psz scalefont def
  currentdict int [int-dict /setfont cvx] cvx put
} bdef 
 
%
%  <int-font-name> <code> <wx> <llx> <lly> <urx> <ury> <rows> <cols> <runlength> <rasters> PXLC
%
/PXLC {
 
  /rasters xdef
  /runlength xdef
  /cols xdef
  /rows xdef
  /ury xdef
  /urx xdef
  /lly xdef
  /llx xdef
  /wx xdef
  /code xdef
  /int xdef
 
  % See if the long or short format is required
  true cols CKSZ rows CKSZ ury CKSZ urx CKSZ lly CKSZ llx CKSZ 
    TackRunLengthToRows
    { int-dict /CharDict get /Char-Info get code 
        [0 0 llx PackByte 1 lly PackByte 2 urx PackByte 3 ury PackByte
         0 0 wx PackHW 2 rows PackByte 3 cols PackByte
         rasters] put}
    { int-dict /CharDict get /Char-Info get code 
        [0 0 urx PackHW 1 ury PackHW
         0 0 llx PackHW 1 lly PackHW
         0 0 rows PackHW 1 cols PackHW
         0 0 16#7FFF PackHW 1 wx PackHW
         rasters] put} 
    ifelse
} bdef
 
/CKSZ {abs 127 le and} bdef
/TackRunLengthToRows {runlength 0 ne {/rows rows neg def} if} bdef
 
%
%  <wx> <dsz> <psz> <llx> <lly> <urx> <ury> <rows> <cols> <runlength> <rasters> PLOTC
%
/PLOTC {
  /rasters xdef
  /runlength xdef
  /cols xdef
  /rows xdef
  /ury xdef
  /urx xdef
  /lly xdef
  /llx xdef
  /psz xdef
  /dsz xdef
  /wx xdef
 
  % "Plot" a character's raster pattern.
  rows 0 ne
    {
    gsave
      currentpoint translate
      psz dsz div dup scale
      cols rows true 
      RasterScaleFactor 0 0 RasterScaleFactor neg llx neg ury 
        tempmatrix astore
      {GenerateRasters} imagemask
    grestore
    } if
  wx x
} bdef
 
% Routine to generate rasters for "imagemask".
/GenerateRasters {
  rasters
  runlength 1 eq {RunLengthToRasters} if
} bdef
 
% Routine to convert from runlength encoding back to rasters.
/RunLengthToRasters {
  % ...not done yet...
} bdef
 
%
%  These procedures handle bitmap processing.
%
%  <bitmap columns> <bitmap rows> <bitmap pix/inch> <magnification> BMbeg
%
/BMbeg {
  /BMmagnification xdef
  /BMresolution xdef
  /BMrows xdef
  /BMcols xdef

  /BMcurrentrow 0 def
  gsave
    0.0 setgray
    Resolution BMresolution div dup scale
    currentpoint translate
    BMmagnification 1000.0 div dup scale
    0.0 BMrows moveto
    BMrows dup scale
    currentpoint translate
    /BMCheckpoint save def
  } bdef

/BMend {
  BMCheckpoint restore
  grestore
  } bdef

%
%  <hex raster bitmap> <rows> BMswath 
%
/BMswath {
  /rows xdef
  /rasters xdef

  BMcols rows true
  [BMrows 0 0 BMrows neg 0 BMcurrentrow neg]
  {rasters}
  imagemask

  /BMcurrentrow BMcurrentrow rows add def
  BMcurrentrow % save this on the stack around a restore...
  BMCheckpoint restore
  /BMcurrentrow xdef
  /BMCheckpoint save def
  } bdef

%
%  Procedures for implementing the "rotate <theta>" special:
%  <theta> ROTB -
%        - ROTE -

/ROTB {
  XP
  gsave
  Xpos Ypos translate
  rotate % using <theta> from the stack
  Xpos neg Ypos neg translate
  RP
  } bdef

/ROTE {XP grestore RP} bdef

%
%  Procedures for implementing the "epsfile <filename> [<mag>]" special:
%  <llx> <lly> <mag> EPSB -
%  - EPSE -

/EPSB {
  0 SPB
  save
  4 1 roll % push the savelevel below the parameters
  /showpage {} def
  Xpos Ypos translate
  1000 div dup scale % using <mag> from the stack
  neg exch neg exch translate % using <llx> <lly> from the stack
  } bdef

/EPSE {restore 0 SPE} bdef

%
%  Procedure for implementing revision bars:
%  <bary1> <bary2> <barx> <barw> REVB -
%  The bar is a line of width barw drawn from (barx,bary1) to (barx,bary2).

/REVB {
  /barw xdef
  /barx xdef
  /bary2 xdef
  /bary1 xdef
  gsave
    barw setlinewidth
    barx bary1 Yadjust moveto
    barx bary2 Yadjust lineto
    stroke
  grestore
  } bdef

%  
%  A small array and two procedures to facilitate The Publisher's
%  implementation of gray table cells:
%                               <ptnum> GRSP -
%  <ultpnum> <lrptnum> <graylev> <freq> GRFB -
%  
%  GRSP saves the current DVI location so that it can be retrieved later
%  by the index <ptnum>.  GRFB fills a box whose corners are given by the
%  indexes <ultpnum> and <lrptnum> with a halftone gray with the given
%  level and frequency.  The array GRPM holds the coordinates of points
%  marking the corners of gray table cells. <freq> is currently ignored
%  since modifying it via setscreen is prohibited by Adobe's PostScript
%  coding conventions.
%  

/GRPM 40 dict def

/GRSP {GRPM exch [Xpos Ypos] put} bdef

/GRFB {
  /GRfreq xdef
  /GRgraylev xdef
  GRPM exch get aload pop /GRlry xdef /GRlrx xdef
  GRPM exch get aload pop /GRuly xdef /GRulx xdef
  gsave
    % % set the screen frequency if it isn't zero
    % % (disabled currently...)
    % GRfreq 0 ne
    %   {currentscreen
    %   3 -1 roll pop GRfreq 3 1 roll
    %   setscreen}
    % if
    % set the gray level
    GRgraylev setgray
    % draw and fill the path
    GRulx GRuly moveto
    GRlrx GRuly lineto
    GRlrx GRlry lineto
    GRulx GRlry lineto
    closepath
    fill
  grestore
  } bdef


%
%  Procedures for implementing the "paper <source>" option:
%  <name> <eop> SPS          -
%         <eop> paper-manual -
%  etc.  The boolean <eop> is passed so that a paper source procedure
%  knows if it is being called at the beginning (false) or end
%  (true) of a page.

/SPS {
  /eop xdef
  /name xdef
  name where {pop eop name cvx exec} if
  } bdef

/paper-manual {
    {statusdict /manualfeed known
      {statusdict /manualfeed true put}
    if}
  if
  } bdef

/paper-automatic {
    {statusdict /manualfeed known
      {statusdict /manualfeed false put}
    if}
  if
  } bdef

/paper-top-tray {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 0 setpapertray grestore end}
    if}
  ifelse
  } bdef

/paper-bottom-tray {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 1 setpapertray grestore end}
    if}
  ifelse
  } bdef

/paper-both-trays {
    {}
    {statusdict /setpapertray known
      {statusdict begin gsave 2 setpapertray grestore end}
    if}
  ifelse
  } bdef

(end of common prolog) VMSDebug 

end
 
systemdict /setpacking known 
  {savepackingmode setpacking}
  if

% 
% End of prolog section.
%

%!
% PostScript code to generate derived fonts for PS-LaTeX
%
% Create a transformed font
% params: symbol for name of new font,
%         symbol for name of original font,
%         font transformation matrix
%         proc to execute on font (the transformed font dict is on the
%               top of the stack when this proc is called)
/TransformFont {
  30 dict begin                 % for temporary storage
    /Proc exch def              % the proc to exec
    /TransformMatrix exch def   % transform matrix
    /BaseName exch def          % existing font
    /NewName exch def           % new name

        % find old font, apply transfrom
    /BaseFontDict BaseName findfont TransformMatrix makefont def
        % make a dictionary for the new font
    /NewFont BaseFontDict maxlength dict def
        % copy entries into the new dictionary (see Cookbook for expln.)
    BaseFontDict
      { exch dup /FID ne
          { dup /Encoding eq
              { exch dup length array copy
                NewFont 3 1 roll put }
              { exch NewFont 3 1 roll put }
            ifelse }
          { pop pop }
        ifelse
      } forall
    NewFont /FontName NewName put

        % call procedure
    NewFont Proc
        % store new font in fontdict
    NewName NewFont definefont
    pop
  end
} def

% Create an Oblique font
% params:       new name for font
%               old font
%               angle of obliqueness
/ObliqueFont {
  20 dict begin
    /Angle exch def
    [1 0 Angle sin Angle cos div 1 0 0] % transform for obliqueness
    {pop}
    TransformFont
  end
} def

% Create a condensed font with different strokewidth
% params:       new font name
%               old font name
%               factor to condense by (e.g., 0.8)
%               factor to thicken lines by (e.g., 1.5)
/CondensedFont {
  20 dict begin
    /LineThickening exch def
    /WidthNarrowing exch def
    [WidthNarrowing 0 0 1 0 0] % transform matrix
% UCSD change:  StrokeWidth undefined, so get replace this procedure:
%   {dup /StrokeWidth get LineThickening mul /StrokeWidth exch put}
    {pop} % 'cause it worked for ObliqueFont, above
    TransformFont
  end
} def

/Times-Oblique /Times-Roman 15 ObliqueFont
/Times-BoldOblique /Times-Bold 15 ObliqueFont
%/Times-ItalicUnslanted /Times-Italic -15.15 ObliqueFont
/Symbol-Oblique /Symbol 15 ObliqueFont
/Courier-Narrow /Courier 0.85 1.3 CondensedFont

% Can use these on a LaserWriter Plus
/makeLWPlusFonts {
  /Bookman-LightOblique /Bookman-Light 10 ObliqueFont
  /NewCenturySchlbk-Oblique /NewCenturySchlbk-Roman 10 ObliqueFont
  /Palatino-Oblique /Palatino-Roman 10 ObliqueFont
  /Palatino-BoldOblique /Palatino-Bold 10 ObliqueFont
} def


%%EndProlog
%%BeginSetup
BeginDviLaserDoc
300 300 RES
0 DT
%%EndSetup


%%PageBoundingBox: (atend)
%%BeginPageSetup
1200 BP 3300 2550 PM /paper-automatic false SPS 300 0 XY
%%EndPageSetup
XP /F0 /cmr10 360 49.8 49.8 128 [-2 -13 49 37] PXLNF RP
XP /F0 77 46 2 0 43 34 34 48 0
<FF800001FF80 FF800001FF80 07800001F000 05C00002F000 05C00002F000
 04E00004F000 04E00004F000 04E00004F000 04700008F000 04700008F000
 04380010F000 04380010F000 04380010F000 041C0020F000 041C0020F000
 041C0020F000 040E0040F000 040E0040F000 04070080F000 04070080F000
 04070080F000 04038100F000 04038100F000 04038100F000 0401C200F000
 0401C200F000 0400E400F000 0400E400F000 0400E400F000 04007800F000
 04007800F000 1F003000F000 FFE0301FFF80 FFE0301FFF80>
PXLC RP
300 352 XY F0(M)S
XP /F0 97 25 2 0 24 21 21 24 0
<1FF000 381C00 7C0600 7C0700 7C0380 380380 000380 000380 007F80
 07C380 1E0380 3C0380 780380 780380 F00384 F00384 F00384 F00784
 780B84 3C11C8 0FE0F0>
PXLC RP
346 352 XY F0(a)S
XP /F0 116 19 1 0 15 31 31 16 0
<0200 0200 0200 0200 0200 0600 0600 0600 0E00 1E00 3FF8 FFF8 0E00
 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E04 0E04 0E04 0E04
 0E04 0E04 0708 0308 01F0>
PXLC RP
371 352 XY F0(t)S
XP /F0 104 28 1 0 26 35 35 32 0
<0E000000 FE000000 FE000000 1E000000 0E000000 0E000000 0E000000
 0E000000 0E000000 0E000000 0E000000 0E000000 0E000000 0E000000
 0E1F8000 0E60E000 0E807000 0F003800 0F003800 0E003800 0E003800
 0E003800 0E003800 0E003800 0E003800 0E003800 0E003800 0E003800
 0E003800 0E003800 0E003800 0E003800 0E003800 FFE3FF80 FFE3FF80>
PXLC RP
390 352 XY F0(h)S
XP /F0 49 25 4 0 20 33 33 16 0
<0040 01C0 07C0 FFC0 F9C0 01C0 01C0 01C0 01C0 01C0 01C0 01C0 01C0
 01C0 01C0 01C0 01C0 01C0 01C0 01C0 01C0 01C0 01C0 01C0 01C0 01C0
 01C0 01C0 01C0 01C0 01C0 7FFF 7FFF>
PXLC RP
434 352 XY F0(1)S
XP /F0 55 25 3 -1 23 34 35 24 0
<400000 600000 7FFFF0 7FFFF0 7FFFE0 400020 C00040 800080 800100
 800100 000200 000400 000400 000800 001800 001000 003000 003000
 007000 007000 00E000 00E000 00E000 01E000 01E000 01E000 01E000
 03E000 03E000 03E000 03E000 03E000 03E000 03E000 01C000>
PXLC RP
459 352 XY F0(7)S
XP /F0 48 25 2 -1 22 33 34 24 0
<01F800 070E00 0E0700 1C0380 3801C0 3801C0 7801E0 7000E0 7000E0
 7000E0 F000F0 F000F0 F000F0 F000F0 F000F0 F000F0 F000F0 F000F0
 F000F0 F000F0 F000F0 F000F0 F000F0 F000F0 7000E0 7000E0 7000E0
 7801E0 3801C0 3801C0 1C0380 0E0700 070E00 01F800>
PXLC RP
484 352 XY F0(0)S
XP /F0 67 36 3 -1 32 35 36 32 0
<0007F008 003FFC18 00FC0618 01F00138 03C000F8 07800078 0F000038
 1E000038 1E000018 3C000018 3C000018 7C000008 7C000008 78000008
 F8000000 F8000000 F8000000 F8000000 F8000000 F8000000 F8000000
 F8000000 78000000 7C000008 7C000008 3C000008 3C000008 1E000010
 1E000010 0F000020 07800020 03C00040 01F00180 00FC0700 003FFC00
 0007F000>
PXLC RP
509 352 XY F0(C)S 1514 302 XY 259 2 R 1514 376 XY 2 75 R
XP /F0 35 42 3 -10 38 35 45 40 0
<0000C00C00 0000C00C00 0000C00C00 0001C01C00 0001801800 0001801800
 0001801800 0003803800 0003003000 0003003000 0003003000 0007007000
 0006006000 0006006000 0006006000 000E00E000 000C00C000 FFFFFFFFE0
 FFFFFFFFE0 0018018000 0018018000 0018018000 0038038000 0030030000
 0030030000 0030030000 0030030000 FFFFFFFFE0 FFFFFFFFE0 0060060000
 00E00E0000 00C00C0000 00C00C0000 00C00C0000 01C01C0000 0180180000
 0180180000 0180180000 0380380000 0300300000 0300300000 0300300000
 0700700000 0600600000 0600600000>
PXLC RP
1614 352 XY F0(#1)S 1770 376 XY 2 75 R 1514 378 XY 259 2 R 
1772 302 XY 209 2 R 1772 376 XY 2 75 R
XP /F0 50 25 2 0 22 33 33 24 0
<03F800 0FFE00 181F80 2007C0 4003C0 4001E0 F801E0 FC01F0 FC00F0
 FC00F0 7800F0 3001F0 0001E0 0001E0 0003E0 0003C0 000780 000700
 000E00 001C00 003800 007000 00E000 008000 010000 020010 040010
 080010 100030 200020 7FFFE0 FFFFE0 FFFFE0>
PXLC RP
1872 352 XY F0(20)S 1978 376 XY 2 75 R 1772 378 XY 209 2 R 
1980 302 XY 275 2 R 1980 376 XY 2 75 R 2253 376 XY 2 75 R 
1980 378 XY 275 2 R 57 y 300 X(M)S
XP /F0 105 14 1 0 11 34 34 16 0
<1C00 3E00 3E00 3E00 1C00 0000 0000 0000 0000 0000 0000 0000 0000
 0E00 FE00 FE00 1E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00
 0E00 0E00 0E00 0E00 0E00 0E00 FFC0 FFC0>
PXLC RP
346 435 XY F0(i)S
XP /F0 100 28 2 0 26 35 35 24 0
<000070 0007F0 0007F0 0000F0 000070 000070 000070 000070 000070
 000070 000070 000070 000070 000070 01F870 070670 0E0170 1C00F0
 380070 780070 700070 F00070 F00070 F00070 F00070 F00070 F00070
 F00070 700070 780070 380070 1C00F0 0C0178 07067F 01F87F>
PXLC RP
359 435 XY F0(dt)S
XP /F0 101 22 1 0 20 21 21 24 0
<01FC00 070700 0C0380 1C01C0 3801C0 7800E0 7000E0 F000E0 FFFFE0
 F00000 F00000 F00000 F00000 F00000 700000 780020 380020 1C0040
 0E0080 070300 00FC00>
PXLC RP
407 435 XY F0(e)S
XP /F0 114 20 1 0 18 21 21 24 0
<0E1E00 FE6300 FE8780 1E8780 0F0300 0F0000 0E0000 0E0000 0E0000
 0E0000 0E0000 0E0000 0E0000 0E0000 0E0000 0E0000 0E0000 0E0000
 0E0000 FFF000 FFF000>
PXLC RP
429 435 XY F0(r)S
XP /F0 109 42 1 0 40 21 21 40 0
<0E1FC07F00 FE60E18380 FE807201C0 1F003C00E0 0F003C00E0 0E003800E0
 0E003800E0 0E003800E0 0E003800E0 0E003800E0 0E003800E0 0E003800E0
 0E003800E0 0E003800E0 0E003800E0 0E003800E0 0E003800E0 0E003800E0
 0E003800E0 FFE3FF8FFE FFE3FF8FFE>
PXLC RP
448 435 XY F0(m)S 506 X(#2)S 1518 385 XY 259 2 R 1518 459 XY 
2 75 R -24 y 1618 X(#2)S 1774 459 XY 2 75 R 1518 461 XY 
259 2 R 1776 385 XY 209 2 R 1776 459 XY 2 75 R -24 y 1876 X(20)S 
1982 459 XY 2 75 R 1776 461 XY 209 2 R 1984 385 XY 275 2 R 
1984 459 XY 2 75 R 2257 459 XY 2 75 R 1984 461 XY 275 2 R 57 y 300 X
(Ma)S
XP /F0 121 26 1 -10 24 21 31 24 0
<FFC1FE FFC1FE 1E0070 0E0020 0E0020 070040 070040 038080 038080
 038080 01C100 01C100 00E200 00E200 00E200 007400 007400 003800
 003800 003800 001000 001000 002000 002000 002000 F84000 F84000
 F88000 B98000 630000 3E0000>
PXLC RP
369 518 XY F0(y)S 412 X(21)S
XP /F0 44 14 4 -10 10 5 15 8 0
<70 F8 FC FC 74 04 04 04 04 08 08 10 10 20 40>
PXLC RP
462 518 XY F0(,)S 492 X(1)S
XP /F0 57 25 2 -1 22 33 34 24 0
<01F800 07FE00 0E0F00 1C0380 380380 7801C0 7001C0 7001E0 F000E0
 F000E0 F000F0 F000F0 F000F0 F000F0 F000F0 7000F0 7001F0 3801F0
 1802F0 0C02F0 060CF0 01F0F0 0000E0 0000E0 0001E0 0001C0 3801C0
 7C0380 7C0380 780700 300E00 303C00 1FF800 07E000>
PXLC RP
517 518 XY F0(997)S 1515 468 XY 259 2 R 1515 543 XY 2 75 R -25 y 
1615 X(#)S
XP /F0 51 25 2 -1 22 33 34 24 0
<01F800 0FFE00 1C0F80 3003C0 3803C0 7C03E0 7C01E0 7C01E0 3C03E0
 1803E0 0003C0 000380 000780 000E00 001C00 03F800 000E00 000780
 0003C0 0003E0 0001E0 0001F0 0001F0 3001F0 7801F0 FC01F0 FC01F0
 FC01E0 F803E0 4003C0 200780 1C0F00 0FFE00 03F800>
PXLC RP
1656 518 XY F0(3)S 1771 543 XY 2 75 R 1515 545 XY 259 2 R 
1773 468 XY 209 2 R 1773 543 XY 2 75 R
XP /F0 52 25 1 0 23 33 33 24 0
<000300 000300 000700 000F00 000F00 001700 003700 002700 004700
 00C700 008700 010700 030700 020700 040700 0C0700 080700 100700
 300700 200700 400700 C00700 FFFFFC FFFFFC 000700 000700 000700
 000700 000700 000700 000700 00FFF8 00FFF8>
PXLC RP
1873 518 XY F0(40)S 1979 543 XY 2 75 R 1773 545 XY 209 2 R 
1981 468 XY 275 2 R 1981 543 XY 2 75 R 2254 543 XY 2 75 R 
1981 545 XY 275 2 R
XP /F0 80 34 2 0 30 34 34 32 0
<FFFFF800 FFFFFE00 07801F00 078007C0 078003C0 078001E0 078001E0
 078001F0 078001F0 078001F0 078001F0 078001F0 078001E0 078003E0
 078003C0 07800780 07801F00 07FFFC00 07800000 07800000 07800000
 07800000 07800000 07800000 07800000 07800000 07800000 07800000
 07800000 07800000 07800000 07800000 FFFC0000 FFFC0000>
PXLC RP
300 601 XY F0(Pri)S
XP /F0 110 28 1 0 26 21 21 32 0
<0E1F8000 FE60E000 FE807000 1F003800 0F003800 0E003800 0E003800
 0E003800 0E003800 0E003800 0E003800 0E003800 0E003800 0E003800
 0E003800 0E003800 0E003800 0E003800 0E003800 FFE3FF80 FFE3FF80>
PXLC RP
367 601 XY F0(n)S -1 x(t)S
XP /F0 78 37 2 0 34 34 34 32 0
<FF8007FF FFC007FF 07C000F8 05E00020 04F00020 04F00020 04780020
 047C0020 043C0020 041E0020 041E0020 040F0020 04078020 04078020
 0403C020 0401E020 0401E020 0400F020 0400F820 04007820 04003C20
 04003C20 04001E20 04000F20 04000F20 040007A0 040003E0 040003E0
 040001E0 040001E0 040000E0 1F000060 FFE00060 FFE00020>
PXLC RP
430 601 XY F0(Name)S 572 619 XY 626 2 R 1516 552 XY 259 2 R 
1516 626 XY 2 75 R -25 y 1616 X(#4)S 1772 626 XY 2 75 R 
1516 628 XY 259 2 R 1774 552 XY 209 2 R 1774 626 XY 2 75 R -25 y 
1874 X(20)S 1980 626 XY 2 75 R 1774 628 XY 209 2 R 1982 552 XY 
275 2 R 1982 626 XY 2 75 R 2255 626 XY 2 75 R 1982 628 XY 
275 2 R
XP /F0 83 28 3 -1 24 35 36 24 0
<03F810 0FFE30 1E0730 3801F0 7000F0 700070 E00030 E00030 E00010
 E00010 E00010 F00000 F00000 7C0000 7F0000 3FF000 1FFE00 0FFF80
 03FFC0 003FE0 0003F0 0000F0 000070 000078 000038 800038 800038
 800038 800038 C00030 C00070 E00060 F800E0 CF03C0 C7FF00 80FE00>
PXLC RP
300 684 XY F0(Si)S
XP /F0 103 25 1 -11 23 22 33 24 0
<000078 01F08C 071D1C 0E0E1C 1C0700 1C0700 3C0780 3C0780 3C0780
 3C0780 1C0700 1C0700 0E0E00 0F1C00 19F000 100000 100000 180000
 1C0000 1FFF00 0FFFE0 0FFFF0 3800F8 600018 40001C C0000C C0000C
 C0000C 600018 600018 380070 0E01C0 01FE00>
PXLC RP
342 684 XY F0(gnat)S
XP /F0 117 28 1 0 26 21 21 32 0
<0E003800 FE03F800 FE03F800 1E007800 0E003800 0E003800 0E003800
 0E003800 0E003800 0E003800 0E003800 0E003800 0E003800 0E003800
 0E003800 0E003800 0E007800 0E007800 0700BC00 03833F80 00FC3F80>
PXLC RP
438 684 XY F0(ure)S 524 702 XY 677 2 R 1514 635 XY 259 2 R 
1514 709 XY 2 75 R
XP /F6 /cmmi10 360 49.8 49.8 128 [-1 -12 52 37] PXLNF RP
XP /F6 84 29 2 0 34 34 34 32 0
<1FFFFFFF 1FFFFFFF 1E00F00F 3800F003 3001E003 2001E003 6001E002
 4001E002 4003C002 8003C002 8003C002 8003C002 00078000 00078000
 00078000 00078000 000F0000 000F0000 000F0000 000F0000 001E0000
 001E0000 001E0000 001E0000 003C0000 003C0000 003C0000 003C0000
 00780000 00780000 00780000 00F80000 7FFFF000 7FFFE000>
PXLC RP
1573 684 XY F6(T)S
XP /F6 79 38 3 -1 36 35 36 40 0
<00007F0000 0003C1E000 000E007000 003C003800 0078001C00 00E0001E00
 01E0000E00 03C0000F00 0780000F00 0F00000F00 0F00000F80 1E00000F80
 3E00000F80 3E00000F80 7C00000F80 7C00000F80 7C00000F80 F800001F00
 F800001F00 F800001F00 F800001E00 F800003E00 F000003E00 F000007C00
 F000007C00 F00000F800 F00000F000 F80001F000 780003E000 780003C000
 3800078000 3C000E0000 1E001C0000 0F00780000 0381E00000 00FF000000>
PXLC RP
1609 684 XY F6(O)S 1 x(T)S
XP /F6 65 37 2 0 35 35 35 40 0
<0000008000 0000018000 000001C000 000003C000 000003C000 000007C000
 00000BC000 00000BC000 000013C000 000013C000 000023C000 000043C000
 000043C000 000083E000 000081E000 000101E000 000201E000 000201E000
 000401E000 000401E000 000801E000 001801E000 001FFFE000 003FFFE000
 002001F000 004000F000 004000F000 008000F000 010000F000 010000F000
 020000F000 060000F000 0E0000F000 FFC00FFF80 FFC01FFF80>
PXLC RP
1684 684 XY F6(A)S
XP /F6 76 34 2 0 31 34 34 32 0
<00FFFF00 00FFFF00 00078000 00078000 000F0000 000F0000 000F0000
 000F0000 001E0000 001E0000 001E0000 001E0000 003C0000 003C0000
 003C0000 003C0000 00780000 00780000 00780000 00780000 00F00000
 00F00008 00F00008 00F00010 01E00010 01E00010 01E00020 01E00020
 03C00060 03C000C0 03C003C0 07C00FC0 FFFFFF80 FFFFFF80>
PXLC RP
1722 684 XY F6(L)S 1771 709 XY 2 75 R 1514 711 XY 259 2 R 
1773 635 XY 209 2 R 1773 709 XY 2 75 R -25 y 1848 X F0(100)S 
1979 709 XY 2 75 R 1773 711 XY 209 2 R 1981 635 XY 275 2 R 
1981 709 XY 2 75 R 2254 709 XY 2 75 R 1981 711 XY 275 2 R
XP /F23 /cmbx10 360 49.8 49.8 128 [-3 -12 57 37] PXLNF RP
XP /F23 83 32 3 0 28 34 34 32 0
<01FE0200 07FFCE00 1F01FE00 3C007E00 3C001E00 78000E00 78000E00
 F8000600 F8000600 FC000600 FC000000 FF000000 FFF00000 7FFF8000
 3FFFE000 3FFFF800 1FFFFC00 07FFFE00 03FFFF00 003FFF00 0001FF00
 00003F80 00001F80 00001F80 C0000F80 C0000F80 C0000F80 E0000F00
 E0000F00 F0001E00 FC001C00 FF807800 E7FFF000 807FC000>
PXLC RP
300 913 XY F23(S)S
XP /F23 72 45 2 0 42 34 34 40 0
<FFFF81FFFF FFFF81FFFF 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0
 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0
 07F0000FE0 07F0000FE0 07F0000FE0 07FFFFFFE0 07FFFFFFE0 07F0000FE0
 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0
 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0 07F0000FE0
 07F0000FE0 07F0000FE0 FFFF81FFFF FFFF81FFFF>
PXLC RP
332 913 XY F23(H)S
XP /F23 79 43 3 0 39 34 34 40 0
<0007FE0000 003FFFC000 00FE07F000 03F801FC00 07F000FE00 0FE0007F00
 1FC0003F80 1F80001F80 3F80001FC0 3F80001FC0 7F00000FE0 7F00000FE0
 7F00000FE0 FF00000FF0 FF00000FF0 FF00000FF0 FF00000FF0 FF00000FF0
 FF00000FF0 FF00000FF0 FF00000FF0 FF00000FF0 7F00000FE0 7F80001FE0
 7F80001FE0 3F80001FC0 1FC0003F80 1FC0003F80 0FE0007F00 07F000FE00
 03F801FC00 00FE07F000 003FFFC000 0007FE0000>
PXLC RP
377 913 XY F23(O)S
XP /F23 87 59 1 0 57 34 34 56 0
<FFFF07FFF80FFF FFFF07FFF80FFF 07F0007F0000F0 07F0003F800060
 07F8003F800060 03F8003FC000C0 03F8001FC000C0 03FC001FC001C0
 01FC003FE00180 01FC003FE00180 00FE003FF00300 00FE0067F00300
 00FF0067F00300 007F00E7F80600 007F00C3F80600 007F80C3F80E00
 003F8181FC0C00 003F8181FC0C00 001FC381FE1800 001FC300FE1800
 001FE300FE3800 000FE6007F3000 000FE6007F3000 0007F6007F6000
 0007FC003FE000 0007FC003FE000 0003FC003FC000 0003F8001FC000
 0003F8001FC000 0001F0000F8000 0001F0000F8000 0000F0000F0000
 0000E000070000 00006000060000>
PXLC RP
418 913 XY F23(W)S
XP /F23 89 43 1 0 41 34 34 40 0
<FFFF8007FF FFFF8007FF 07F80000F0 03FC0000E0 03FC0001C0 01FE000180
 00FF000380 00FF000300 007F800600 003FC00E00 003FC00C00 001FE01800
 000FF03800 000FF03000 0007F87000 0003FCE000 0003FCC000 0001FFC000
 0000FF8000 0000FF0000 00007F0000 00007F0000 00007F0000 00007F0000
 00007F0000 00007F0000 00007F0000 00007F0000 00007F0000 00007F0000
 00007F0000 00007F0000 000FFFF800 000FFFF800>
PXLC RP
494 913 XY F23(YO)S
XP /F23 85 44 2 0 41 34 34 40 0
<FFFF801FFE FFFF801FFE 07F00000C0 07F00000C0 07F00000C0 07F00000C0
 07F00000C0 07F00000C0 07F00000C0 07F00000C0 07F00000C0 07F00000C0
 07F00000C0 07F00000C0 07F00000C0 07F00000C0 07F00000C0 07F00000C0
 07F00000C0 07F00000C0 07F00000C0 07F00000C0 07F00000C0 07F00000C0
 07F00000C0 07F00001C0 03F0000180 03F8000180 01F8000380 00FC000700
 007E000E00 003F807C00 000FFFF000 0000FF8000>
PXLC RP
580 913 XY F23(U)S
XP /F23 82 43 2 0 42 34 34 40 0
<FFFFFF0000 FFFFFFE000 07F007F800 07F001FC00 07F000FE00 07F0007F00
 07F0007F80 07F0007F80 07F0007F80 07F0007F80 07F0007F80 07F0007F80
 07F0007F00 07F000FE00 07F001FC00 07F007F800 07FFFFE000 07FFFF8000
 07F00FE000 07F007F000 07F003F800 07F001FC00 07F001FC00 07F001FC00
 07F001FC00 07F001FE00 07F001FE00 07F001FE00 07F001FE03 07F001FF03
 07F000FF07 07F000FF8E FFFF803FFC FFFF800FF8>
PXLC RP
624 913 XY F23(R)S 684 X(W)S -2 x(OR)S
XP /F23 75 45 2 0 41 34 34 40 0
<FFFF800FFE FFFF800FFE 07F00001E0 07F00003C0 07F0000700 07F0000E00
 07F0001C00 07F0007800 07F000E000 07F001C000 07F0038000 07F0070000
 07F01E0000 07F03C0000 07F07E0000 07F0FE0000 07F3FF0000 07F77F8000
 07FE3FC000 07FC3FC000 07F81FE000 07F00FF000 07F007F800 07F007F800
 07F003FC00 07F001FE00 07F000FF00 07F000FF00 07F0007F80 07F0003FC0
 07F0001FE0 07F0001FE0 FFFF81FFFE FFFF81FFFE>
PXLC RP
828 913 XY F23(K)S
XP /F23 33 17 4 0 12 35 35 8 0
<3C 7E FF FF FF FF FF 7E 7E 7E 7E 7E 7E 3C 3C 3C 3C 3C 3C 18 18 18 18
 00 00 00 00 3C 7E FF FF FF FF 7E 3C>
PXLC RP
872 913 XY F23(!!!)S
XP /F0 40 19 3 -13 15 37 50 16 0
<0010 0020 0040 0080 0100 0300 0600 0400 0C00 1800 1800 1800 3000
 3000 3000 7000 6000 6000 6000 E000 E000 E000 E000 E000 E000 E000
 E000 E000 E000 E000 E000 6000 6000 6000 7000 3000 3000 3000 1800
 1800 1800 0C00 0400 0600 0300 0100 0080 0040 0020 0010>
PXLC RP
78 1167 XY F0(\(20)S
XP /F0 41 19 3 -13 15 37 50 16 0
<8000 4000 2000 1000 0800 0C00 0600 0200 0300 0180 0180 0180 00C0
 00C0 00C0 00E0 0060 0060 0060 0070 0070 0070 0070 0070 0070 0070
 0070 0070 0070 0070 0070 0060 0060 0060 00E0 00C0 00C0 00C0 0180
 0180 0180 0300 0200 0600 0C00 0800 1000 2000 4000 8000>
PXLC RP
147 1167 XY F0(\))S 183 X(1)S
XP /F0 46 14 4 0 9 5 5 8 0
<70 F8 F8 F8 70>
PXLC RP
208 1167 XY F0(.)S
XP /F0 84 36 2 0 33 34 34 32 0
<7FFFFFFC 7FFFFFFC 7803C03C 6003C00C 4003C004 4003C004 C003C006
 C003C006 8003C002 8003C002 8003C002 8003C002 0003C000 0003C000
 0003C000 0003C000 0003C000 0003C000 0003C000 0003C000 0003C000
 0003C000 0003C000 0003C000 0003C000 0003C000 0003C000 0003C000
 0003C000 0003C000 0003C000 0003C000 01FFFF80 01FFFF80>
PXLC RP
310 1167 XY F0(T)S 342 X(ran)S
XP /F0 115 20 2 0 17 21 21 16 0
<0FC4 303C 600C C00C C004 C004 E004 F000 7F80 3FF0 0FF8 00FC 001E
 800E 8006 C006 C006 C004 E00C D818 87E0>
PXLC RP
414 1167 XY F0(s)S
XP /F0 102 15 0 0 17 35 35 24 0
<003E00 00E300 01C780 038F80 030F80 070700 070000 070000 070000
 070000 070000 070000 070000 070000 FFF800 FFF800 070000 070000
 070000 070000 070000 070000 070000 070000 070000 070000 070000
 070000 070000 070000 070000 070000 070000 7FF800 7FF800>
PXLC RP
434 1167 XY F0(f)S
XP /F0 111 25 1 0 23 21 21 24 0
<00FC00 070380 0E01C0 1C00E0 380070 780078 700038 F0003C F0003C
 F0003C F0003C F0003C F0003C F0003C 700038 780078 380070 1C00E0
 0E01C0 070380 00FC00>
PXLC RP
449 1167 XY F0(orm)S 551 X(the)S 637 X(fo)S
XP /F0 108 14 1 0 12 35 35 16 0
<0E00 FE00 FE00 1E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00
 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00 0E00
 0E00 0E00 0E00 0E00 0E00 0E00 0E00 FFE0 FFE0>
PXLC RP
677 1167 XY F0(llo)S
XP /F0 119 36 1 0 34 21 21 40 0
<FF8FF87F80 FF8FF87F80 1E01C01E00 0E00C00C00 0E00E00800 0E01E00800
 0701601000 0701701000 0702303000 0382382000 0382382000 01C4184000
 01C41C4000 01C41C4000 00E80C8000 00E80E8000 00E80E8000 0070070000
 0070070000 0070070000 0020020000>
PXLC RP
728 1167 XY F0(wing)S 847 X(to)S 908 X(a)S 950 X(system)S 1115 X
(of)S
XP /F0 12 28 0 0 26 35 35 32 0
<000FC000 00783000 00E00800 01803C00 03807C00 07007C00 07007C00
 07003800 07000000 07000000 07000000 07000000 07000000 07000000
 FFFFFC00 FFFFFC00 07003C00 07001C00 07001C00 07001C00 07001C00
 07001C00 07001C00 07001C00 07001C00 07001C00 07001C00 07001C00
 07001C00 07001C00 07001C00 07001C00 07001C00 7FF1FFC0 7FF1FFC0>
PXLC RP
1172 1167 XY F0(\014rst)S 1275 X(order)S 1405 X(di)S
XP /F0 11 29 0 0 31 35 35 32 0
<001FC1F0 0070270C 00C07E1E 0180FC3E 0380FC3E 0700F81C 07007800
 07003800 07003800 07003800 07003800 07003800 07003800 07003800
 FFFFFFE0 FFFFFFE0 07003800 07003800 07003800 07003800 07003800
 07003800 07003800 07003800 07003800 07003800 07003800 07003800
 07003800 07003800 07003800 07003800 07003800 7FE1FFC0 7FE1FFC0>
PXLC RP
1446 1167 XY F0(\013eren)S -1 x(tial)S 1654 X(e)S
XP /F0 113 26 2 -10 25 21 31 24 0
<01F820 070460 0E0260 1C0160 3801E0 7800E0 7800E0 F000E0 F000E0
 F000E0 F000E0 F000E0 F000E0 F000E0 7000E0 7800E0 3801E0 1C01E0
 0C02E0 070CE0 01F0E0 0000E0 0000E0 0000E0 0000E0 0000E0 0000E0
 0000E0 0000E0 000FFE 000FFE>
PXLC RP
1676 1167 XY F0(quations)S
XP /F0 58 14 4 0 9 21 21 8 0
<70 F8 F8 F8 70 00 00 00 00 00 00 00 00 00 00 00 70 F8 F8 F8 70>
PXLC RP
1861 1167 XY F0(:)S
XP /F6 121 24 2 -10 24 21 31 24 0
<1E0018 230038 438038 438070 838070 838070 870070 0700E0 0E00E0
 0E00E0 0E00E0 1C01C0 1C01C0 1C01C0 1C01C0 1C0380 1C0380 1C0780
 0C0B80 0E1700 03E700 000700 000700 000E00 300E00 781C00 781800
 703000 406000 21C000 1F0000>
PXLC RP
903 1292 XY F6(y)S
XP /F15 /cmsy7 360 34.9 34.9 128 [0 -33 43 28] PXLNF RP
XP /F15 48 11 2 1 9 19 18 8 0
<0C 1E 1E 1E 3C 3C 3C 38 38 78 70 70 70 60 E0 E0 C0 40>
PXLC RP
929 1271 XY F15(0)S 1 x(0)S
XP /F0 61 39 3 6 35 18 12 32 0
<FFFFFFFF FFFFFFFF 00000000 00000000 00000000 00000000 00000000
 00000000 00000000 00000000 FFFFFFFF FFFFFFFF>
PXLC RP
969 1292 XY F0(=)S
XP /F6 101 23 3 0 20 21 21 24 0
<007C00 03C200 070100 0E0100 1C0100 380100 780200 700400 FFF800
 F00000 F00000 E00000 E00000 E00000 E00000 E00080 E00080 700300
 300400 183800 0FC000>
PXLC RP
1021 1292 XY F6(e)S
XP /F9 /cmmi7 360 34.9 34.9 128 [0 -9 41 26] PXLNF RP
XP /F9 120 23 3 0 19 15 15 16 0
<0F1E 11A3 21C7 41C6 41C0 0380 0380 0380 0380 0700 0702 C702 EF04
 CB08 71F0>
PXLC RP
1044 1271 XY F9(x)S
XP /F0 99 22 2 0 20 21 21 24 0
<01FE00 070700 0C0F80 1C0F80 380F80 780700 700000 F00000 F00000
 F00000 F00000 F00000 F00000 F00000 700000 780040 380040 1C0080
 0C0100 070600 01F800>
PXLC RP
1078 1292 XY F0(cos)S -1 x(\()S F6(y)S -21 y 2 x F15(0)S 21 y 1204 X 
F0(\))S
XP /F0 43 39 3 -5 35 29 34 32 0
<00018000 00018000 00018000 00018000 00018000 00018000 00018000
 00018000 00018000 00018000 00018000 00018000 00018000 00018000
 00018000 00018000 FFFFFFFF FFFFFFFF 00018000 00018000 00018000
 00018000 00018000 00018000 00018000 00018000 00018000 00018000
 00018000 00018000 00018000 00018000 00018000 00018000>
PXLC RP
1234 1292 XY F0(+)S 1284 X F6(e)S
XP /F9 122 19 3 0 18 15 15 16 0
<0702 0F84 1FF8 1010 0020 0040 0080 0100 0200 0C00 1008 2018 3FF0
 47E0 81C0>
PXLC RP
1307 1271 XY F9(z)S 21 y 1339 X F0(sin)S -1 x(\()S
XP /F6 122 23 2 0 22 21 21 24 0
<00E010 03F020 07F860 060FC0 080080 080100 000200 000400 000800
 001000 002000 00C000 010000 020000 040040 080080 100180 3F8300
 61FE00 40FC00 807800>
PXLC RP
1419 1292 XY F6(z)S -21 y 2 x F15(0)S 21 y 3 x F0(\))S 1372 Y 904 X 
F6(z)S -21 y 2 x F15(0)S 1 x(0)S 21 y 969 X F0(=)S 1021 X(\(cos)S 
1115 X F6(y)S 2 x F0(\)\(cos)S 1255 X F6(z)S 2 x F0(\))S
XP /F12 /cmsy10 360 49.8 49.8 128 [-1 -48 54 39] PXLNF RP
XP /F12 0 39 4 11 34 13 2 32 0
<FFFFFFFC FFFFFFFC>
PXLC RP
1311 1372 XY F12(\000)S 1361 X F0(\(sin)S 1450 X F6(y)S -21 y 2 x 
F15(0)S 21 y 3 x F0(\)\(sin)S 1598 X F6(z)S -21 y 2 x F15(0)S 21 y 
1638 X F0(\))S 1496 Y 790 X F6(y)S 2 x F0(\(0\))S 893 X(=)S 946 X
(1)S
XP /F6 59 14 4 -10 10 5 15 8 0
<70 F8 FC FC 74 04 04 04 04 08 08 10 10 20 40>
PXLC RP
971 1496 XY F6(;)S 1043 X(y)S -20 y 2 x F15(0)S 20 y 3 x F0(\(0\))S
1160 X(=)S 1213 X(2)S F6(;)S 1310 X(z)S 2 x F0(\(0\))S 1413 X(=)S 
1465 X(3)S F6(;)S 1562 X(z)S -20 y 2 x F15(0)S 20 y 1602 X F0
(\(0\))S 1679 X(=)S 1732 X(4)S
XP /F6 58 14 4 0 9 5 5 8 0
<70 F8 F8 F8 70>
PXLC RP
1756 1496 XY F6(:)S 1695 Y 78 X F0(\(20\))S 183 X(2.)S
XP /F0 68 38 2 0 34 34 34 32 0
<FFFFF800 FFFFFE00 07800F80 078003C0 078001E0 078000F0 07800078
 07800078 0780003C 0780003C 0780001E 0780001E 0780001E 0780001F
 0780001F 0780001F 0780001F 0780001F 0780001F 0780001F 0780001F
 0780001F 0780001E 0780001E 0780003E 0780003C 0780003C 07800078
 078000F0 078001E0 078003C0 07800F80 FFFFFF00 FFFFF800>
PXLC RP
310 1695 XY F0(Deri)S
XP /F0 118 26 1 0 24 21 21 24 0
<FFC1FE FFC1FE 1E0070 0E0020 0E0020 070040 070040 038080 038080
 038080 01C100 01C100 00E200 00E200 00E200 007400 007400 003800
 003800 003800 001000>
PXLC RP
404 1695 XY F0(v)S -1 x(e)S
XP /F0 69 34 2 0 32 34 34 32 0
<FFFFFFE0 FFFFFFE0 078003E0 078000E0 07800060 07800020 07800030
 07800030 07800010 07802010 07802010 07802010 07802000 07806000
 0780E000 07FFE000 07FFE000 0780E000 07806000 07802000 07802000
 07802004 07802004 07800004 07800008 07800008 07800008 07800018
 07800018 07800038 07800078 078001F0 FFFFFFF0 FFFFFFF0>
PXLC RP
467 1695 XY F0(Euler)S
XP /F0 39 14 4 20 10 35 15 8 0
<70 F8 FC FC 74 04 04 04 04 08 08 10 10 20 40>
PXLC RP
584 1695 XY F0('s)S 634 X(metho)S 1 x(d)S 816 X(and)S 912 X(the)S 
998 X(mid)S
XP /F0 112 28 1 -10 25 21 31 24 0
<0E1F80 FE60E0 FE8070 0F0038 0E001C 0E001E 0E001E 0E000F 0E000F
 0E000F 0E000F 0E000F 0E000F 0E000F 0E001E 0E001E 0E001C 0F0038
 0E8070 0E60E0 0E1F80 0E0000 0E0000 0E0000 0E0000 0E0000 0E0000
 0E0000 0E0000 FFE000 FFE000>
PXLC RP
1081 1695 XY F0(p)S 1 x(oin)S -1 x(t)S 1211 X(metho)S 1 x(d.)S 1860 Y 
78 X(\(40\))S 183 X(3.\(a\))S 310 X(Determine)S 553 X(all)S 622 X
(\014rst)S 725 X(order)S 855 X(metho)S 1 x(ds)S 1056 X(of)S 1113 X
(the)S 1199 X(form)S 1984 Y 914 X F6(y)S
XP /F9 110 25 3 0 23 15 15 24 0
<383E00 4CC700 8F0300 8E0380 8E0380 1C0700 1C0700 1C0700 1C0E00
 380E00 380E20 381C20 381C40 700C80 300700>
PXLC RP
938 1992 XY F9(n)S
XP /F3 /cmr7 360 34.9 34.9 128 [-2 -9 38 26] PXLNF RP
XP /F3 43 31 2 -4 27 22 26 32 0
<000C0000 000C0000 000C0000 000C0000 000C0000 000C0000 000C0000
 000C0000 000C0000 000C0000 000C0000 000C0000 FFFFFF80 FFFFFF80
 000C0000 000C0000 000C0000 000C0000 000C0000 000C0000 000C0000
 000C0000 000C0000 000C0000 000C0000 000C0000>
PXLC RP
963 1992 XY F3(+)S
XP /F3 49 20 3 0 15 22 22 16 0
<0300 0700 FF00 0700 0700 0700 0700 0700 0700 0700 0700 0700 0700
 0700 0700 0700 0700 0700 0700 0700 0700 FFF0>
PXLC RP
993 1992 XY F3(1)S -8 y 1029 X F0(=)S
XP /F6 97 26 2 0 24 21 21 24 0
<007C30 01C270 030170 0701E0 0E00E0 1C00E0 3C00E0 3801C0 7801C0
 7801C0 7801C0 F00380 F00380 F00380 F00384 F00708 700708 700F08
 301308 186310 0F80E0>
PXLC RP
1082 1984 XY F6(a)S
XP /F3 48 20 2 0 16 22 22 16 0
<0780 1860 3030 7038 6018 6018 E01C E01C E01C E01C E01C E01C E01C
 E01C E01C E01C 6018 6018 7038 3030 1860 0FC0>
PXLC RP
1108 1992 XY F3(0)S -8 y 3 x F6(y)S 8 y F9(n)S -8 y 1193 X F0(+)S
XP /F6 104 29 3 0 26 35 35 24 0
<00F000 0FE000 0FE000 00E000 00E000 01C000 01C000 01C000 01C000
 038000 038000 038000 038000 070000 070F80 0730C0 074060 0E8070
 0F0070 0E0070 0E0070 1C00E0 1C00E0 1C00E0 1C00E0 3801C0 3801C0
 380380 380382 700384 700704 700704 700308 E00310 6001E0>
PXLC RP
1243 1984 XY F6(h)S
XP /F0 91 14 5 -12 12 37 49 8 0
<FE FE C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0
 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0 C0
 C0 FE FE>
PXLC RP
1272 1984 XY F0([)S
XP /F6 98 21 3 0 20 35 35 24 0
<03C000 3F8000 3F8000 038000 038000 070000 070000 070000 070000
 0E0000 0E0000 0E0000 0E0000 1C0000 1C7800 1D8E00 1E0700 3C0700
 380380 380380 380780 700780 700780 700780 700780 E00F00 E00F00
 E00F00 E01E00 E01C00 601C00 603800 307000 30C000 0F0000>
PXLC RP
1286 1984 XY F6(b)S
XP /F15 0 31 4 8 27 10 2 24 0
<FFFFFE FFFFFE>
PXLC RP
1307 1992 XY F15(\000)S F3(1)S
XP /F6 102 24 2 -10 27 35 45 32 0
<00001E00 00006380 0000C780 0001C780 0001C300 00018000 00038000
 00038000 00038000 00038000 00070000 00070000 00070000 00070000
 00FFF800 00FFF800 000E0000 000E0000 000E0000 000E0000 001E0000
 001C0000 001C0000 001C0000 001C0000 001C0000 00380000 00380000
 00380000 00380000 00380000 00700000 00700000 00700000 00700000
 00600000 00E00000 00E00000 00E00000 00C00000 70C00000 F1800000
 F1000000 62000000 3C000000>
PXLC RP
1361 1984 XY F6(f)S 8 y F9(n)S F3(+1)S -8 y 1474 X F0(+)S 1523 X F6
(b)S 8 y F3(0)S -8 y 3 x F6(f)S 8 y F9(n)S
XP /F0 93 14 1 -12 8 37 49 8 0
<FE FE 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06
 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06 06
 06 FE FE>
PXLC RP
1619 1984 XY F0(])S F6(:)S 2109 Y 310 X F0(Determine)S 553 X(all)S
XP /F23 101 26 2 0 23 22 22 24 0
<00FE00 07FF80 0F83E0 1F01E0 3E00F0 7E00F0 7C00F8 FC00F8 FC0078
 FFFFF8 FFFFF8 FC0000 FC0000 FC0000 FC0000 7E0000 7E0018 3E0038
 1F0030 0F80F0 03FFC0 00FF00>
PXLC RP
622 2109 XY F23(e)S
XP /F23 120 30 1 0 28 22 22 32 0
<FFF0FFC0 FFF0FFC0 0FC03C00 07E03800 07F07000 03F0E000 01F8C000
 00FD8000 007F0000 007F0000 003F0000 001F8000 003FC000 0037E000
 0067F000 00C3F000 01C1F800 0380FC00 0700FE00 0F007E00 FFC1FFE0
 FFC1FFE0>
PXLC RP
648 2109 XY F23(x)S
XP /F23 112 32 2 -10 29 22 32 32 0
<FF87F000 FFBFFC00 1FF07E00 1FC01F00 1F800F80 1F800FC0 1F800FC0
 1F8007E0 1F8007E0 1F8007E0 1F8007E0 1F8007E0 1F8007E0 1F8007E0
 1F8007C0 1F800FC0 1F800FC0 1F801F80 1FC01F00 1FF07E00 1FBFFC00
 1F8FE000 1F800000 1F800000 1F800000 1F800000 1F800000 1F800000
 1F800000 1F800000 FFF00000 FFF00000>
PXLC RP
679 2109 XY F23(p)S
XP /F23 108 16 2 0 14 35 35 16 0
<FF80 FF80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80
 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80
 1F80 1F80 1F80 1F80 1F80 1F80 1F80 FFF0 FFF0>
PXLC RP
710 2109 XY F23(l)S
XP /F23 105 16 2 0 14 36 36 16 0
<0E00 3F80 7F80 7F80 7F80 7F80 3F80 0E00 0000 0000 0000 0000 0000
 0000 FF80 FF80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80
 1F80 1F80 1F80 1F80 1F80 1F80 1F80 1F80 FFF0 FFF0>
PXLC RP
726 2109 XY F23(i)S
XP /F23 99 25 2 0 22 22 22 24 0
<00FF80 07FFE0 0F83F0 1F03F0 3E03F0 7E03F0 7C01E0 7C0000 FC0000
 FC0000 FC0000 FC0000 FC0000 FC0000 7C0000 7E0000 7E0000 3F0030
 1F0060 0FC0E0 07FF80 00FE00>
PXLC RP
742 2109 XY F23(ci)S
XP /F23 116 22 1 0 18 32 32 24 0
<00C000 00C000 00C000 00C000 01C000 01C000 03C000 07C000 0FC000
 1FC000 FFFF00 FFFF00 0FC000 0FC000 0FC000 0FC000 0FC000 0FC000
 0FC000 0FC000 0FC000 0FC000 0FC000 0FC180 0FC180 0FC180 0FC180
 0FC180 07C180 07E300 03FE00 00FC00>
PXLC RP
784 2109 XY F23(t)S 823 X F0(\014rst)S 925 X(order)S 1056 X(metho)S
1 x(ds)S 1257 X(of)S 1313 X(the)S 1399 X(form)S 1517 X(a)S
XP /F0 98 28 1 0 25 35 35 24 0
<0E0000 FE0000 FE0000 1E0000 0E0000 0E0000 0E0000 0E0000 0E0000
 0E0000 0E0000 0E0000 0E0000 0E0000 0E1F80 0E60E0 0E8030 0F0038
 0E001C 0E001E 0E000E 0E000F 0E000F 0E000F 0E000F 0E000F 0E000F
 0E000F 0E000E 0E001E 0E001C 0F0038 0C8070 0C60E0 081F80>
PXLC RP
1542 2109 XY F0(b)S 1 x(o)S -1 x(v)S -1 x(e.)S 2273 Y 219 X(\(b\))S
310 X(Determine)S 553 X(whether)S 744 X F6(y)S 8 y F9(n)S F3(+1)S 
-8 y 860 X F0(=)S 912 X F6(y)S 8 y F9(n)S F15(\000)S F3(1)S -8 y 
1026 X F0(+)S
XP /F9 104 23 3 0 20 24 24 24 0
<1F8000 038000 070000 070000 070000 070000 0E0000 0E0000 0E0000
 0EF800 1D0C00 1E0C00 1C0E00 1C0E00 381C00 381C00 381C00 383800
 703800 703880 707080 707100 E03200 601C00>
PXLC RP
1082 2254 XY F9(h)S 1082 2262 XY 24 2 R
XP /F3 50 20 2 0 16 22 22 16 0
<0FC0 3070 4038 4038 C03C E01C E01C 003C 0038 0038 0070 0060 00C0
 0180 0300 0600 0404 0804 100C 3FF8 7FF8 FFF8>
PXLC RP
1084 2291 XY F3(2)S -18 y 1111 X F0([)S
XP /F0 53 25 2 -1 22 33 34 24 0
<180040 1E0380 1FFF80 1FFF00 1FFC00 13F000 100000 100000 100000
 100000 100000 100000 10FC00 130600 140380 180180 1001C0 0000E0
 0000E0 0000F0 0000F0 0000F0 7000F0 F800F0 F800F0 F800F0 F800E0
 C001E0 4001C0 6003C0 300380 1C0F00 0FFE00 03F000>
PXLC RP
1125 2273 XY F0(5)S F6(f)S 8 y F9(n)S -8 y 1212 X F12(\000)S 1262 X 
F6(f)S 8 y F9(n)S F3(+1)S -8 y 2 x F0(])S 1395 X(is)S 1445 X(con)S
-1 x(v)S -1 x(ergen)S -1 x(t)S 1694 X(and)S 1791 X(determine)S 2023 X
(its)S 2093 X(order.)S 2438 Y 78 X(\(20\))S 183 X(4.\(a\))S
XP /F0 87 51 1 -1 49 34 35 48 0
<FFF83FFE03FF FFF83FFE03FF 0F8003E00078 0F0001E00030 078001E00020
 078001E00020 078001F00020 03C001F00040 03C001F00040 03C002780040
 01E002780080 01E002780080 01E0043C0080 00F0043C0100 00F0043C0100
 00F0081E0100 00F8081E0300 0078081E0200 0078181F0200 0078100F0200
 003C100F0400 003C100F0400 003C20078400 001E20078800 001E20078800
 001E4003C800 000F4003D000 000F4003D000 000F8001F000 00078001E000
 00078001E000 00070000E000 00070000E000 00030000C000 000200004000>
PXLC RP
310 2438 XY F0(What)S 450 X(is)S 500 X(a)S 541 X(predictor)S
XP /F0 45 17 1 10 13 12 2 16 0
<FFF0 FFF0>
PXLC RP
738 2438 XY F0(-corrector)S 965 X(metho)S 1 x(d)S
XP /F0 63 24 3 0 20 35 35 24 0
<07F000 181C00 200E00 400700 F00780 F80780 F80780 F80780 700780
 000F00 000E00 001C00 003800 007000 006000 00C000 008000 008000
 018000 010000 010000 010000 010000 010000 010000 000000 000000
 000000 000000 000000 038000 07C000 07C000 07C000 038000>
PXLC RP
1130 2438 XY F0(?)S
XP /F0 71 39 3 -1 35 35 36 32 0
<0007F008 003FFC18 00FC0618 01F00138 03C000F8 07800078 0F000038
 1E000038 1E000018 3C000018 3C000018 7C000008 7C000008 78000008
 F8000000 F8000000 F8000000 F8000000 F8000000 F8000000 F8000000
 F8001FFF 78001FFF 7C000078 7C000078 3C000078 3C000078 1E000078
 1F000078 0F000078 07800078 03C000B8 01F001B8 00FC0718 003FFC08
 0007F000>
PXLC RP
1179 2438 XY F0(Giv)S -1 x(e)S 1295 X(an)S 1364 X(e)S
XP /F0 120 26 1 0 24 21 21 24 0
<FF83FE FF83FE 0F01E0 070080 038100 038300 01C200 00E400 007800
 007000 003800 003C00 004E00 008E00 018700 010380 0201C0 0601C0
 1E00E0 FF03FE FF03FE>
PXLC RP
1386 2438 XY F0(xample.)S 2602 Y 219 X(\(b\))S 310 X(De\014ne:)S
XP /F0 65 37 2 0 34 35 35 32 0
<00018000 00018000 00018000 0003C000 0003C000 0003C000 0005E000
 0005E000 0005E000 0008F000 0008F000 0008F000 00107800 00107800
 00107800 00203C00 00203C00 00603E00 00401E00 00401E00 00C01F00
 00800F00 00FFFF00 01FFFF80 01000780 01000780 020003C0 020003C0
 020003C0 040001E0 040001E0 0C0001E0 1E0001F0 FFC01FFF FFC01FFF>
PXLC RP
486 2602 XY F0(A)S 540 X(m)S -1 x(ultistep)S 761 X(metho)S 1 x(d)S
942 X(is)S 992 X F6(A)S F0(-stable.)S 1212 X(Giv)S -1 x(e)S 1329 X
(an)S 1398 X(example)S 1593 X(of)S 1650 X(an)S 1719 X F6(A)S F0
(-stable)S 1917 X(metho)S 1 x(d.)S 3120 Y 1263 X(1)S
%%PageTrailer
EP /paper-automatic true SPS 1 PP
%%PageBoundingBox: 19 40 542 720

%%Trailer
EndDviLaserDoc

%%BoundingBox: 19 40 542 720
%%Pages: 1
%%DocumentFonts:
